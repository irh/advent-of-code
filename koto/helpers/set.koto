set_meta =
  @type: 'Set'
  @iterator: || self.data.keys()

  @meta contains: |value|
    self.data.contains_key value

  @meta extend: |values|
    for value in values
      self.data.insert value
    self

  @meta insert: |value|
    self.data.insert value
    self

  @size: || size self.data
  @meta is_empty: || (size self.data) == 0

export make_set = |values: Iterable? = null|
  data = values?.to_map() or {}
  {data}.with_meta set_meta

iterator.to_set = || make_set self

export
  @test chars_to_set: ||
    s = 'abccbadeffed'.to_set()
    assert_eq s.to_string(), 'abcdef'
    assert s.contains 'c'
    assert not s.contains 'x'
